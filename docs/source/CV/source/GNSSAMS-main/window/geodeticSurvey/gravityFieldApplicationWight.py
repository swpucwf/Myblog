# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gravityFieldApplicationWight.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtGui, QtWidgets

from database.database import Database
from geodeticSurvey.draw_qualLine import drawGravityAnomaly
from window.geodeticSurvey.actionCacuGravityAnomalyThread import ActionCacuGravityAnomaly


class Ui_Form(QtCore.QObject):
    infoEmit = QtCore.pyqtSignal(str, str)

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1175, 689)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./source/icon/futuro_icons_277.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Form.setWindowIcon(icon)
        self.horizontalLayout = QtWidgets.QHBoxLayout(Form)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setMaximumSize(QtCore.QSize(340, 400))
        self.groupBox.setFlat(False)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.tabWidget = QtWidgets.QTabWidget(self.groupBox)
        self.tabWidget.setMaximumSize(QtCore.QSize(310, 200))
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.button_measure = QtWidgets.QCommandLinkButton(self.tab)
        self.button_measure.setDefault(True)
        self.button_measure.setObjectName("button_measure")
        self.verticalLayout_2.addWidget(self.button_measure)
        self.button_model = QtWidgets.QCommandLinkButton(self.tab)
        self.button_model.setAutoDefault(False)
        self.button_model.setDefault(True)
        self.button_model.setObjectName("button_model")
        self.verticalLayout_2.addWidget(self.button_model)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("./source/icon/hore.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab, icon1, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tab_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("./source/icon/sang.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab_2, icon2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("./source/icon/bance.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab_3, icon3, "")
        self.verticalLayout_4.addWidget(self.tabWidget)
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("./source/icon/eli.png"))
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout_4.addWidget(self.label)
        self.horizontalLayout.addWidget(self.groupBox)
        self.groupBox_2 = QtWidgets.QGroupBox(Form)
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textEdit = QtWidgets.QTextEdit(self.groupBox_2)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout.addWidget(self.textEdit)
        self.horizontalLayout.addWidget(self.groupBox_2)

        self.retranslateUi(Form)
        self.tabWidget.setCurrentIndex(0)
        self.button_measure.clicked.connect(self.actionButtonMeasureDataCacu)
        self.button_model.clicked.connect(self.actionModelCacu)
        self.actionCacuGravityAnomaly = ActionCacuGravityAnomaly()
        self.actionCacuGravityAnomaly.infoEmit.connect(self.sendTopInfo)
        self.actionCacuGravityAnomaly.overEmit.connect(self.killThread)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.groupBox.setTitle(_translate("Form", "操作"))
        self.button_measure.setText(_translate("Form", "采用测量数据解算\n"
                                                       "重力异常\n"
                                                       "数据组成形式:\n"
                                                       " [ID,Lon,Lat,H,g]\n"
                                                       ""))
        self.button_model.setText(_translate("Form", "采用重力场模型解算\n"
                                                     "重力异常"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Form", "计算重力异常"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Form", "海洋表面质量异常"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("Form", "其他应用"))
        self.groupBox_2.setTitle(_translate("Form", "输出"))

    def actionButtonMeasureDataCacu(self):
        measureDataPath = Database.gravityMeasureFilePath
        if measureDataPath is not None:
            dictPara = {"code": 201,
                        "filePath": measureDataPath,
                        "modelFilePath": None,
                        "fileNormalPath": None,
                        "fileType": measureDataPath[-3:]}
            self.actionCacuGravityAnomaly.setPara(dictPara)
            # 清空文本框
            self.textEdit.clear()
            self.actionCacuGravityAnomaly.start()
        else:
            self.sendTopInfo("T", "未导入测量数据")

    def actionModelCacu(self):
        fileName, filter = QtWidgets.QFileDialog.getOpenFileName(self.parent(), "导入重力场模型",
                                                                 Database.workspace,
                                                                 "All Files(*)")
        if fileName != "":
            self.sendTopInfo("T", "已导入模型文件，即将导入正常位系数文件...")
            fileNormalPath, filter = QtWidgets.QFileDialog.getOpenFileName(self.parent(), "导入正常位系数文件",
                                                                           Database.workspace,
                                                                           "All Files(*)")
            if fileNormalPath != "":
                if Database.gravityMeasureFilePath is None:
                    self.sendTopInfo("T", "未导入测量数据")
                else:
                    dictPara = {"code": 202,
                                "filePath": Database.gravityMeasureFilePath,
                                "modelFilePath": fileName,
                                "fileNormalPath": fileNormalPath,
                                "fileType": Database.gravityMeasureFilePath[-3:]}
                    self.actionCacuGravityAnomaly.setPara(dictPara)
                    # 清空文本框
                    self.textEdit.clear()
                    self.actionCacuGravityAnomaly.start()

    def getReportText(self):
        return self.textEdit.toPlainText()

    def killThread(self):
        self.actionCacuGravityAnomaly.killThread()
        self.sendTopInfo("I","关闭子线程")

    def sendTopInfo(self, type, strInfo):
        if type == "G":
            self.textEdit.append(strInfo)
        # elif type == "draw":
        #     drawGravityAnomaly()
        else:
            self.infoEmit.emit(type, strInfo)
